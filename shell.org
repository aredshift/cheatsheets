* CLI Cheatsheet

** Shortcuts
- Clear terminal shortcut: ~C-l~
- Open your current command in your $EDITOR: ~C-x C-e~
  - Remember to save + close
- Cut and paste a command without executing it:
  ~C-u~ (remove and add to kill ring)
  ~C-y~ (yank from kill ring)
  [[https://unix.stackexchange.com/a/140744][SO Post]]

** Commands
- Find all symlinks to a given file
  src_bash{find -L /dir/to/start -samefile /tmp/orig.file}
  [[https://stackoverflow.com/questions/4532241/linux-find-all-symlinks-of-a-given-original-file-reverse-readlink][Source SO Post]]
- Update a symlink
  File: src_bash{ln -sf /a/new/path files}
  Directory: src_bash{ln -sfn /a/new/path dir}
  [[https://unix.stackexchange.com/a/152000][Source SO Post]]
- List all commands: src_bash{compgen -c}
  [[https://www.gnu.org/software/bash/manual/bash.html#index-compgen][Man page]]
- Read man page for shell builtins
  - Bash: src_bash{help}
  - Zsh: src_zsh{run-help}

- Fuzzyfind commands on your system and open their manpage
  src_bash{compgen -c | fzf | xargs man}

** Patterns
- Write a HEREDOC to file:
  #+begin_src bash
    cat << EOF > /tmp/yourfilehere
    These contents will be written to the file.
            This line is indented.
    EOF
  #+end_src
  - Source:[[https://stackoverflow.com/a/2954835/21154015][SO Post]]
  - Source:[[https://tldp.org/LDP/abs/html/here-docs.html][TLDP-Advanced Bash Scripting Guide]]
  - Source:[[https://www.gnu.org/software/bash/manual/html_node/Redirections.html#Here-Documents][GNU Bash reference]]

** How to access a "nested" variable ("variable pointers", indirect expansion)
Say you are given a variable that contains the name of another variable, whose contents you are interested in. Eg.:
#+begin_src bash
  VAR_ONE="this is the value I want"
  VAR_TWO="VAR_ONE"
#+end_src

In this (contrived) example, we want to access the value of ~VAR_ONE~ but say we are only able to directly expand ~VAR_TWO~. In order to access ~VAR_ONE~ in this way, we use the "indirect expansion" syntax (notice the "!"):
#+begin_src bash
  echo "${!VAR_TWO}" # prints "this is the value I want"
#+end_src
[[https://stackoverflow.com/a/14204692/21154015][SO Post]]



* Learning resources
- [[https://www.youtube.com/watch?v=IYZDIhfAUM0][Become a Shell Wizard in ~12 mins (by CODE IS EVERYTHING)]]

